var documenterSearchIndex = {"docs":
[{"location":"getting-started/#Getting-Started","page":"Getting Started","title":"Getting Started","text":"","category":"section"},{"location":"getting-started/","page":"Getting Started","title":"Getting Started","text":"The first step to using DirectDetections.jl is to install Julia. If you're used to Python, don't worry –- Julia is easy to install, and you won't need to code anything other than changing your input data.","category":"page"},{"location":"getting-started/#Installing-Julia","page":"Getting Started","title":"Installing Julia","text":"","category":"section"},{"location":"getting-started/","page":"Getting Started","title":"Getting Started","text":"Visit the julialang.org Downloads page, and select the latest stable version for your operating system. Currently, this is 1.6.2. Click the [help] links next to your operating system if you require more detailed instructions.","category":"page"},{"location":"getting-started/#Installing-DirectDetections","page":"Getting Started","title":"Installing DirectDetections","text":"","category":"section"},{"location":"getting-started/","page":"Getting Started","title":"Getting Started","text":"Normally, Julia packages are installed from the General registry. Since DirectDetections isn't quite ready for prime time, it requires one extra step to add an additional registry.","category":"page"},{"location":"getting-started/","page":"Getting Started","title":"Getting Started","text":"Start julia in a terminal by running julia\nType ] to enter package-mode (see Julia documentation for more details)\nType registry add https://github.com/sefffal/DirectRegistry\nType add DirectDetections Distributions","category":"page"},{"location":"getting-started/","page":"Getting Started","title":"Getting Started","text":"You will need the Distributions package added above so that you can specify priors for different parameters in your models.","category":"page"},{"location":"getting-started/","page":"Getting Started","title":"Getting Started","text":"If you would like to visualize your results, you can also install the Plots package:","category":"page"},{"location":"getting-started/","page":"Getting Started","title":"Getting Started","text":"Type add Plots","category":"page"},{"location":"getting-started/","page":"Getting Started","title":"Getting Started","text":"For loading images to sample, add the DirectImages package ","category":"page"},{"location":"getting-started/","page":"Getting Started","title":"Getting Started","text":"Type add DirectImages","category":"page"},{"location":"getting-started/","page":"Getting Started","title":"Getting Started","text":"Note: it's possible to use this package without DirectImages. This just simplifies the process of loading FITS files, and creating a centered OffsetArray with the star at index (0,0).","category":"page"},{"location":"getting-started/","page":"Getting Started","title":"Getting Started","text":"This will take a little while to download all the required packages and precompile for your system.","category":"page"},{"location":"getting-started/#Fitting-your-first-model","page":"Getting Started","title":"Fitting your first model","text":"","category":"section"},{"location":"getting-started/","page":"Getting Started","title":"Getting Started","text":"Start with the Fit Astrometry tutorial which shows how to model of one planet with some astrometry points.","category":"page"},{"location":"modelling/#fit-astrometry","page":"Fit Astrometry","title":"Basic Model","text":"","category":"section"},{"location":"modelling/","page":"Fit Astrometry","title":"Fit Astrometry","text":"Here is a worked example of a basic model. It contains a star with a single planet, and several astrometry points.","category":"page"},{"location":"modelling/","page":"Fit Astrometry","title":"Fit Astrometry","text":"Start by loading the DirectDetections and Plots packages:","category":"page"},{"location":"modelling/","page":"Fit Astrometry","title":"Fit Astrometry","text":"using DirectDetections, Distributions, Plots","category":"page"},{"location":"modelling/#Creating-a-planet","page":"Fit Astrometry","title":"Creating a planet","text":"","category":"section"},{"location":"modelling/","page":"Fit Astrometry","title":"Fit Astrometry","text":"Create our first planet. Let's name it planet X.","category":"page"},{"location":"modelling/","page":"Fit Astrometry","title":"Fit Astrometry","text":"@named X = DirectDetections.Planet(\n    Priors(\n        a = TruncatedNormal(15, 2, 0, Inf),\n        e = TruncatedNormal(0.1, 0.1, 0, 0.5),\n        τ = TruncatedNormal(0.5, 0.5, 0, 1),\n        ω = Normal(1π, 1π),\n        i = Normal(1π, 1π),\n        Ω = Normal(1π, 1π),\n    ),\n    Astrometry(\n        (epoch=5000.,  ra=1000.0, dec=250, σ_ra=20., σ_dec=29.),\n        (epoch=5172.,  ra=-900.1, dec=-100., σ_ra=20., σ_dec=20.),\n    )\n)","category":"page"},{"location":"modelling/","page":"Fit Astrometry","title":"Fit Astrometry","text":"There's a lot going on here, so let's break it down.","category":"page"},{"location":"modelling/","page":"Fit Astrometry","title":"Fit Astrometry","text":"The Priors block accepts the priors that you would like for the orbital parameters of this planet. Priors can be any univariate distribution from the Distributions.jl package. You will want to always specify the following parameters:","category":"page"},{"location":"modelling/","page":"Fit Astrometry","title":"Fit Astrometry","text":"a: Semi-major axis in astronomical units (AU)\ni: Inclination in radians\ne: Eccentricity in the range [0, 1)\nτ: Epoch of periastron passage, in fraction of orbit [0,1]\nω: Argument of periastron\nΩ: Longitude of the ascending node, radians.","category":"page"},{"location":"modelling/","page":"Fit Astrometry","title":"Fit Astrometry","text":"The parameter τ represents the epoch of periastron passage as a fraction of the planet's orbit between 0 and 1. This follows the same convention as Orbitize! and you can read more about their choice in ther FAQ.","category":"page"},{"location":"modelling/","page":"Fit Astrometry","title":"Fit Astrometry","text":"The parameters can be specified in any order.","category":"page"},{"location":"modelling/","page":"Fit Astrometry","title":"Fit Astrometry","text":"The Astrometry block is optional. This is where you can list the position of a planet at different epochs if it known. epoch is a modified Julian date that the observation was taken. the ra, dec, σ_ra, and σ_dec parameters are the position of the planet at that epoch, relative to the star. All values in milliarcseconds (mas).","category":"page"},{"location":"modelling/#Valid-priors","page":"Fit Astrometry","title":"Valid priors","text":"","category":"section"},{"location":"modelling/","page":"Fit Astrometry","title":"Fit Astrometry","text":"Internally, the domains of several parameters are re-mapped to improve sampling. This means that your priors must obey the following criteria:","category":"page"},{"location":"modelling/","page":"Fit Astrometry","title":"Fit Astrometry","text":"τ must be restricted to (0,1)\ne must be restricted to (0,1)\na must be restricted to (0, Inf)\nμ must be restricted to (0, Inf)\nplx must be restricted to (0, Inf)","category":"page"},{"location":"modelling/#Creating-a-system","page":"Fit Astrometry","title":"Creating a system","text":"","category":"section"},{"location":"modelling/","page":"Fit Astrometry","title":"Fit Astrometry","text":"A system represents a host star with one or more planets. Properties of the whole system are specified here, like parallax distance and mass of the star. This is also where you will supply data like images and astrometric acceleration in later tutorials, since those don't belong to any planet in particular.","category":"page"},{"location":"modelling/","page":"Fit Astrometry","title":"Fit Astrometry","text":"@named HD82134 = System(\n    Priors(\n        μ = TruncatedNormal(1.0, 0.01, 0, Inf),\n        plx = TruncatedNormal(1000.2, 0.02, 0, Inf),\n    ),  \n    X,\n)","category":"page"},{"location":"modelling/","page":"Fit Astrometry","title":"Fit Astrometry","text":"The Priors block works just like it does for planets. Here, the two parameters you must provide are:","category":"page"},{"location":"modelling/","page":"Fit Astrometry","title":"Fit Astrometry","text":"μ: Gravitational parameter of the central body, expressed in units of Solar mass.\nplx: Distance to the system expressed in milliarcseconds of parallax.","category":"page"},{"location":"modelling/","page":"Fit Astrometry","title":"Fit Astrometry","text":"After that, just list any planets that you want orbiting the star. Here, we pass planet X.","category":"page"},{"location":"modelling/","page":"Fit Astrometry","title":"Fit Astrometry","text":"You can name the system and planets whatever you like. NB: the @named convenience macro just passes in the name as a keyword argument, e.g. name=:HD82134. This makes sure that the variable name matches what gets displayed in the package output, and saved a few keystrokes. (taken from ModellingToolkit.jl)","category":"page"},{"location":"modelling/#Sampling","page":"Fit Astrometry","title":"Sampling","text":"","category":"section"},{"location":"modelling/","page":"Fit Astrometry","title":"Fit Astrometry","text":"Great! Now we are ready to draw samples from the posterior.","category":"page"},{"location":"modelling/","page":"Fit Astrometry","title":"Fit Astrometry","text":"Start sampling:","category":"page"},{"location":"modelling/","page":"Fit Astrometry","title":"Fit Astrometry","text":"chains, stats = DirectDetections.hmctf(\n    HD82134;\n    burnin=2_000,\n    numwalkers=1,\n    numsamples_perwalker=10_000\n);","category":"page"},{"location":"modelling/","page":"Fit Astrometry","title":"Fit Astrometry","text":"You will get an output that looks something like with a progress bar that updates every second or so:","category":"page"},{"location":"modelling/","page":"Fit Astrometry","title":"Fit Astrometry","text":"┌ Info: Guessing a good starting location by sampling from priors\n└   N = 100000\n┌ Info: Found good location\n│   mapv = 298.85965496281216\n│   a =\n│    1-element Vector{Float64}:\n└     17.526543775440597\nSampling 28%|█████████                      |  ETA: 0:11:32\n  iterations:                    422\n  n_steps:                       8191\n  is_accept:                     true\n  acceptance_rate:               0.8361569510892266\n  log_density:                   335.34337289077916\n  hamiltonian_energy:            -333.56163860438176\n  hamiltonian_energy_error:      0.6794974484806744\n  max_hamiltonian_energy_error:  1.0270049717873349\n  tree_depth:                    13\n  numerical_error:               false\n  step_size:                     0.00024442197084181946\n  nom_step_size:                 0.00024442197084181946\n  is_adapt:                      true\n  mass_matrix:                   DenseEuclideanMetric(diag=[7.836792441654134e-5, 5.04...])","category":"page"},{"location":"modelling/","page":"Fit Astrometry","title":"Fit Astrometry","text":"A few things to watch out for: check that you aren't getting many (any, really) numerical_error=true. This likely indicates that the priors are too restrictive, and the sampler keeps taking steps outside of their valid range. It could also indicate a problem with DirectDetections, e.g. if the sampler is picking negative eccentricities.","category":"page"},{"location":"modelling/#Analysis","page":"Fit Astrometry","title":"Analysis","text":"","category":"section"},{"location":"modelling/","page":"Fit Astrometry","title":"Fit Astrometry","text":"As a first pass, let's plot a sample of orbits drawn from the posterior.","category":"page"},{"location":"modelling/","page":"Fit Astrometry","title":"Fit Astrometry","text":"using Plots\nplotmodel(chains[1], HD82134)","category":"page"},{"location":"modelling/#Notes-on-Hamiltonian-Monte-Carlo","page":"Fit Astrometry","title":"Notes on Hamiltonian Monte Carlo","text":"","category":"section"},{"location":"modelling/","page":"Fit Astrometry","title":"Fit Astrometry","text":"Traditional Affine Invariant MCMC is supported (similar to the python emcee package), but it is recommended that you use Hamiltonian Monte Carlo. This sampling method makes use of derivative information, and is much more efficient. ","category":"page"},{"location":"modelling/","page":"Fit Astrometry","title":"Fit Astrometry","text":"Derviatives for a complex model are usualy tedious to code, but DirectDetections uses ForwardDiff.jl to generate them automatically.","category":"page"},{"location":"modelling/","page":"Fit Astrometry","title":"Fit Astrometry","text":"When using HMC, only a few chains are necessary. This is in contrast to Affine Invariant MCMC based packages where hundreds or thousands of walkers are required. One chain should be enough to cover the whole posterior, but you can run a few different chains to make sure each has converged to the same distribution.","category":"page"},{"location":"modelling/","page":"Fit Astrometry","title":"Fit Astrometry","text":"Similarily, many fewer samples are required. This is because unlike Affine Invariant MCMC, HMC produces samples that are much less correlated after each step (i.e. the autocorrelation time is much shorter).","category":"page"},{"location":"#DirectDetections.jl","page":"Home","title":"DirectDetections.jl","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Welcome to the documentation page for DirectDetections.jl.  This page includes tutorial and an API reference for using this package.","category":"page"},{"location":"","page":"Home","title":"Home","text":"DirectDetections is a Julia package for performing Bayesian inference against direct images of exoplanets, exoplanet astrometry, astrometric acceleration of the host star, and radial velocity (future).","category":"page"},{"location":"","page":"Home","title":"Home","text":"You build a model of the system using the functions described below, list any data you might have, and start the sampler. The package also contains analysis and visualization tools for understanding your results.","category":"page"},{"location":"","page":"Home","title":"Home","text":"Supported data:","category":"page"},{"location":"","page":"Home","title":"Home","text":"sample directly from images\nexoplanet astrometry \nstellar astrometric acceleration","category":"page"},{"location":"","page":"Home","title":"Home","text":"Any and all combinations also work together.","category":"page"},{"location":"","page":"Home","title":"Home","text":"Modelling features:","category":"page"},{"location":"","page":"Home","title":"Home","text":"multiple planets (one or more)\nco-planar, and non-coplanar systems\nhierarchical models\nlink mass to photometry via an atmosphere model","category":"page"},{"location":"","page":"Home","title":"Home","text":"The package supports only bound, 2-body Keplerian orbits. Support for hyperbolic orbits and multi-body physics are not currently planned.","category":"page"},{"location":"#Table-of-Contents","page":"Home","title":"Table of Contents","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"","category":"page"}]
}
